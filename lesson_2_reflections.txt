What happens when you initialize a repository? Why do you need to do it?

You convert a normal directory into a repository. This is needed for git to track all the changes to the files that you will add to the repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

The staging area is where you add files from your working directory that you would like to commit to the repo. The repository contains all the files for which you are currently tracking changes.

How can you use the staging area to make sure you have one commit per logical
change?

You can make sure to only add the files that are related to the change. With the staging area, you can also see what files you've changed that have not been added and to compare the files you've added with the last commit. This helps you to make sure that you are going to commit only the files that you want.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

If you want to try out a big change to the files without having to remember where the original files is in case there have been other changes to the master file.

How do the diagrams help you visualize the branch structure?

It helps me be able to figure out which commit is the head of the branch and to have a visual mindmap of how the files have changed in different directions.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

We ntroduce the new changes to the master copy of the file. It's to better understand how merging works and to see how the different branches grow and how we can bring them back together. 

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

Automatic merging is faster and less hassle. However, it may not be possible to select the changes that best fit the scenario. Manually doing a merge would allow you control to ensure that the files are merge optimally.