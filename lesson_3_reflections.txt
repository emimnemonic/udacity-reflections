When would you want to use a remote repository rather than keeping all your work local?

When I'm working with a team of developers.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

To decide what changes you want to keep.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Clones refer to copying and downloading an entire repository into your local machine, whereas forks are essentially cloning but on GitHub. Branches are paths that you create when you want to make changes to the code without tampering with the original code. They can exist in github or locally.

What is the benefit of having a copy of the last known state of the remote stored locally?

When working in a team, it helps to avoid code conflict and to make sure that you're always working with the latest code base.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Without Git or GitHub, there would be a lot of code conflicts and miscommunication. I would have to be in constant communication with my teammates just to make sure that we all know what we're working on and that we avoid working on the same files at the same time. GitHub makes collaboration so much easier and teams can work more efficiently.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

When you're working on a new feature that will take a while to build and when there are a few people working on different things at the same time. It's to avoid code conflict and make sure the master is as clean as possible. I would work directly in master if it's a small project that only I or another person are working on.